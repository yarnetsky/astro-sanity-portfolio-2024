---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
import Layout from "../../layouts/Layout.astro";
import { urlFor } from "../../utils/image";
import { getProject, getProjects } from "../../utils/sanity";

export async function getStaticPaths() {
  const projects = await getProjects();
  return projects.map((project) => ({
    params: { slug: project.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;
const project = await getProject(slug);


---

<Layout title={project.title!}>
  
  <section class="project">

{project.mainImage && (
        <img
          class="project__cover"
          src={urlFor(project.mainImage).url()}
          alt="Cover image"
        /> 
      )}

<div class="project__container">
      <h1 class="project__title">{project.title}</h1>

{project.excerpt && (
        <div class="project__excerpt">
          <PortableText 
            value={project.excerpt}  
            />
        </div>
    )}

<div class="project__date">
        {project.tags && (
          <ul>
            {project.tags.map((tag, index) => (
              <li>
                {tag}
              </li>
            ))}
          </ul>
        )}
      </div>

      <div class="project__content">
        <PortableText 
            value={project.content}
            />
      </div>
    </div>
  </section>
</Layout>

<style>

  .project {
    width: 100%;
    margin: var(--space-0) 0 var(--space-4);
    padding: 0;

    & .project__cover,
    & .project__cover--none {
      width: 100%;
      height: auto;
      object-fit: cover;
      padding: 0;
      margin: 0;
      border-bottom: var(--border-1) solid var(--blue-600);
    }

    & .project__cover--none {
      background: var(--black);
    }

    & .project__container {
      padding: 0;
    }

    & .project__content {
      font-family: var(--font-family-sans);
      font-weight: 300;
      font-size: var(--font-size-3);
      line-height: var(--line-height-4);
      
      margin-top: var(--space-1);
      padding: 0 var(--space-5) var(--space-5) var(--space-5);

      /* Targeting tags in PortableText */
      & blockquote {
        border-left: 5px solid var(--black);
        padding-left: var(--space-3);
        margin-left: var(--space-4);
      }

      & a {
        color: var(--blue-600);
        text-decoration: none;
      }
    }

    & .project__title {
      font-family: var(--font-family-sans);
      font-size: var(--font-size-7);
      line-height: var(--line-height-8);
      margin: var(--space-2) 0;
      padding: var(--space-4) var(--space-5);
      font-weight: 800;
      border-bottom: var(--border-1) solid var(--blue-600);
    }

    & .project__excerpt {
      font-family: var(--font-family-serif);
      padding: var(--space-4) var(--space-4);
      margin: 0;
      border-bottom: var(--border-1) solid var(--blue-600);
    }

    & .project__date {
      font-family: var(--font-family-sans);
      font-weight: 600;
      font-size: var(--font-size-1);
      padding: var(--space-2) var(--space-5);
      line-height: var(--line-height-1);
      margin-top: var(--space-4);
    }
  }



  @media (min-width: 800px) {
    .project {
      & .project__cover,
      & .project__cover--none {
        
      }

      & .project__title {
        font-size: var(--font-size-8);
        line-height: var(--line-height-8);
        padding: var(--space-6) var(--space-6);
        margin: 0 0;
      }

      & .project__excerpt {
        font-size: var(--font-size-5);
        line-height: var(--line-height-5);
      }

      & .project__date {
        font-size: var(--font-size-3);
        line-height: var(--line-height-2);
        margin-top: var(--space-0);
      }

      & .project__content {
        font-family: var(--font-family-sans);
        margin-top: var(--space-0);
        padding: 0 var(--space-6) var(--space-5) var(--space-6);
      }
    }

  }
</style>
