---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
import Layout from "../layouts/Layout.astro";
import { urlFor } from "../utils/image";
import { getPage, getPages } from "../utils/sanity";

export async function getStaticPaths() {
  const pages = await getPages();
  return pages.map((page) => ({
    params: { slug: page.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;
const page = await getPage(slug);


---

<Layout title={page.title!}>
  
  <section class="page">

{page.mainImage && (
        <img
          class="page__cover"
          src={urlFor(page.mainImage).url()}
          alt="Cover image"
        /> 
      )}

<div class="page__container">
      <h1 class="page__title">{page.title}</h1>

{page.excerpt && (
        <p class="page__excerpt">{page.excerpt}</p>
    )}

<div class="page__date">
        {page.tags && (
          <ul>
            {page.tags.map((tag, index) => (
              <li>
                {tag}
              </li>
            ))}
          </ul>
        )}
      </div>

      <div class="page__content">
        <PortableText 
            value={page.content}
            />
      </div>
    </div>
  </section>
</Layout>

<style>

  .page {
    width: 100%;
    margin: var(--space-0) 0 var(--space-4);
    padding: 0;

    & .page__cover,
    & .page__cover--none {
      width: 100%;
      height: auto;
      object-fit: cover;
      padding: 0;
      margin: 0;
      border-bottom: var(--border-1) solid var(--blue-600);
    }

    & .page__cover--none {
      background: var(--black);
    }

    & .page__container {
      padding: 0;
    }

    & .page__content {
      font-family: var(--font-family-sans);
      font-weight: 200;
      font-size: var(--font-size-3);
      line-height: var(--line-height-4);
      letter-spacing: -0.02em;
      margin-top: var(--space-1);
      padding: 0 var(--space-6) var(--space-5) var(--space-6);

      /* Targeting tags in PortableText */
      & blockquote {
        border-left: 5px solid var(--black);
        padding-left: var(--space-3);
        margin-left: var(--space-4);
      }

      & a {
        color: var(--blue-600);
        text-decoration: none;
      }
    }

    & .page__title {
      font-family: var(--font-family-sans);
      font-size: var(--font-size-7);
      line-height: var(--line-height-8);
      margin: var(--space-2) 0;
      padding: var(--space-4) var(--space-5);
      font-weight: 800;
      border-bottom: var(--border-1) solid var(--blue-600);
    }

    & .page__excerpt {
      font-family: var(--font-family-serif);
      padding: var(--space-5) var(--space-6);
      font-size: var(--font-size-5);
      line-height: var(--line-height-6);
      margin: 0;
      font-weight: 400;
      border-bottom: var(--border-1) solid var(--blue-600);

    }

    & .page__date {
      font-family: var(--font-family-sans);
      font-weight: 600;
      font-size: var(--font-size-1);
      padding: var(--space-2) var(--space-5);
      line-height: var(--line-height-1);
      margin-top: var(--space-4);
    }
  }

  @media (min-width: 800px) {
    .page {
      & .page__cover,
      & .page__cover--none {
        
      }

      & .page__title {
        font-size: var(--font-size-8);
        line-height: var(--line-height-8);
        padding: var(--space-6) var(--space-6);
        margin: 0 0;
      }

      & .page__excerpt {
        font-size: var(--font-size-5);
        line-height: var(--line-height-5);
        margin-top: var(--space-3);
        margin-bottom: var(--space-3);
      }

      & .page__date {
        font-size: var(--font-size-3);
        line-height: var(--line-height-2);
        margin-top: var(--space-0);
      }

      & .page__content {
        font-family: var(--font-family-sans);
        margin-top: var(--space-0);
      }
    }
  }
</style>
